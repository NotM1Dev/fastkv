name: 🛠️ beta Build

on:
    push:
        branches:
            - asdfghj
        paths:
            - '!docs'

jobs:
    release:
        name: Publish (Beta)
        runs-on: ubuntu-latest
        steps:
            - uses: pnpm/action-setup@v2
              with:
                  version: 8

            - name: 📚 Checkout
              uses: actions/checkout@v3

            - name: 🟢 Setup Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: 18
                  registry-url: https://registry.npmjs.org

            - name: 📦 Dependencies
              run: pnpm install --no-frozen-lockfile

            - name: ✨ Lint
              run: pnpm lint

            - name: 🛠️ Build
              run: pnpm build

            - name: 🔢 Update Version
              run: |
                  node -e "try { const pkg = require('./package.json'); \
                  const newVersion = pkg.version + '-beta.' + new Date().toISOString().replace(/[:\-T]/g, '').substr(0,14); \
                  pkg.version = newVersion; \
                  require('fs').writeFileSync('./package.json', JSON.stringify(pkg, null, 2)); } catch (error) { console.error(error); }"
              env:
                  DEBIAN_FRONTEND: noninteractive

            - name: 🚚 Publish
              run: pnpm run deploy:fastkv:beta
              env:
                  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

            - name: 🚫 Deprecate Previous Beta Version
              run: |
                  PACKAGE_NAME=$(node -e "console.log(require('./package.json').name);")
                  ALL_VERSIONS=$(npm info $PACKAGE_NAME versions -json)
                  VERSION_TO_DEPRECATE=$(echo $ALL_VERSIONS | node -e "
                      const versions = JSON.parse(require('fs').readFileSync('/dev/stdin', 'utf-8'));
                      const betaVersions = versions.filter(v => v.includes('-beta.'));
                      const versionToDeprecate = betaVersions[betaVersions.length - 2];
                      console.log(versionToDeprecate);
                  ")
                  echo Deprecating beta version: $VERSION_TO_DEPRECATE
                  npm deprecate $PACKAGE_NAME@$VERSION_TO_DEPRECATE "unsupported beta version" || true

              env:
                  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
